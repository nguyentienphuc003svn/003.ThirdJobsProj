
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Semih
 */
public class Reservation extends javax.swing.JFrame {

	static Connection cn;
	static Statement st;
	static PreparedStatement ps;
	static ResultSet rs;
	int current;

	/**
	 * Creates new form Reservation
	 */
	public Reservation() {
		initComponents();
		this.setTitle("Insert/Modify/Delete Reservation");
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		closeAll();
		try {
			cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/reservation", "root", "1234");
			st = cn.createStatement();
		} catch (Exception e) {
			System.err.println("Unable to connect");
			e.printStackTrace();
		}
	}

	private void closeAll() {
		firstNameTF.setEnabled(false);
		lastNameTF.setEnabled(false);
		emailTF.setEnabled(false);
		creditCardNumberTF.setEnabled(false);
		fromCB.setEnabled(false);
		toCB.setEnabled(false);
		departureTimeCB.setEnabled(false);
		submitB.setEnabled(false);
		cancelB.setEnabled(false);
		insertB.setEnabled(true);
		editB.setEnabled(true);
		deleteB.setEnabled(true);
	}

	private void openAll() {
		firstNameTF.setEnabled(true);
		lastNameTF.setEnabled(true);
		emailTF.setEnabled(true);
		creditCardNumberTF.setEnabled(true);
		fromCB.setEnabled(true);
		toCB.setEnabled(true);
		departureTimeCB.setEnabled(true);
		submitB.setEnabled(true);
		cancelB.setEnabled(true);
		insertB.setEnabled(false);
		editB.setEnabled(false);
		deleteB.setEnabled(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		firstNameL = new javax.swing.JLabel();
		lastNameL = new javax.swing.JLabel();
		emailL = new javax.swing.JLabel();
		creditCardNumberL = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		firstNameTF = new javax.swing.JTextField();
		lastNameTF = new javax.swing.JTextField();
		emailTF = new javax.swing.JTextField();
		creditCardNumberTF = new javax.swing.JTextField();
		jPanel3 = new javax.swing.JPanel();
		fromL = new javax.swing.JLabel();
		fromCB = new javax.swing.JComboBox();
		toL = new javax.swing.JLabel();
		toCB = new javax.swing.JComboBox();
		departureTimeL = new javax.swing.JLabel();
		departureTimeCB = new javax.swing.JComboBox();
		submitB = new javax.swing.JButton();
		insertB = new javax.swing.JButton();
		editB = new javax.swing.JButton();
		deleteB = new javax.swing.JButton();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTable2 = new javax.swing.JTable();
		cancelB = new javax.swing.JButton();
		exitB = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jPanel1.setBackground(new java.awt.Color(102, 102, 255));

		jPanel2.setBackground(new java.awt.Color(102, 102, 255));
		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 18))); // NOI18N

		firstNameL.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		firstNameL.setText("First Name:");

		lastNameL.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		lastNameL.setText("Last Name:");

		emailL.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		emailL.setText("Email:");

		creditCardNumberL.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		creditCardNumberL.setText("CreditCard Number:");

		jLabel5.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
		jLabel5.setText("Secuirety Check!!");

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(
				jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addComponent(creditCardNumberL)
										.addGap(18, 18, 18)
										.addComponent(creditCardNumberTF, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jLabel5)
										.addGap(223, 223, 223))
										.addGroup(jPanel2Layout.createSequentialGroup()
												.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(firstNameL)
														.addComponent(emailL))
														.addGap(18, 18, 18)
														.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
																.addComponent(emailTF, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
																.addComponent(firstNameTF))
																.addGap(47, 47, 47)
																.addComponent(lastNameL)
																.addGap(18, 18, 18)
																.addComponent(lastNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
				);
		jPanel2Layout.setVerticalGroup(
				jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
						.addGap(18, 18, 18)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(firstNameL)
								.addComponent(lastNameL)
								.addComponent(firstNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lastNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(emailL)
										.addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(18, 18, 18)
										.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(creditCardNumberL)
												.addComponent(jLabel5)
												.addComponent(creditCardNumberTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
												.addContainerGap(24, Short.MAX_VALUE))
				);

		jPanel3.setBackground(new java.awt.Color(102, 102, 255));
		jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Travel Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 18))); // NOI18N

		fromL.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		fromL.setText("From:");

		fromCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NewYork", "Washington", "Los Angeles", "Chigaco", "Las Vegas", "Dallas" }));
		fromCB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				fromCBActionPerformed(evt);
			}
		});

		toL.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		toL.setText("To:");

		toCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dallas", "Las Vegas", "Chigaco", "Los Angeles", "Washington", "NewYork" }));
		toCB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				toCBActionPerformed(evt);
			}
		});

		departureTimeL.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		departureTimeL.setText("DepartureTime:");

		departureTimeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "9:00 AM", "12:30 PM", "4:00 PM", "7:30 PM", "11:00 PM", "3:30 AM" }));

		submitB.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
		submitB.setText("Submit");
		submitB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				submitBActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(
				jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel3Layout.createSequentialGroup()
										.addComponent(fromL)
										.addGap(18, 18, 18)
										.addComponent(fromCB, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(114, 114, 114)
										.addComponent(toL)
										.addGap(18, 18, 18)
										.addComponent(toCB, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(0, 72, Short.MAX_VALUE))
										.addGroup(jPanel3Layout.createSequentialGroup()
												.addComponent(departureTimeL)
												.addGap(18, 18, 18)
												.addComponent(departureTimeCB, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(submitB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addContainerGap())
				);
		jPanel3Layout.setVerticalGroup(
				jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(fromL)
								.addComponent(fromCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(toL)
								.addComponent(toCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(jPanel3Layout.createSequentialGroup()
												.addGap(30, 30, 30)
												.addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(departureTimeL)
														.addComponent(departureTimeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
														.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
														.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
																.addComponent(submitB, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addContainerGap())))
				);

		insertB.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		insertB.setText("Insert");
		insertB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				insertBActionPerformed(evt);
			}
		});

		editB.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		editB.setText("Edit");
		editB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				editBActionPerformed(evt);
			}
		});

		deleteB.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		deleteB.setText("Delete");
		deleteB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteBActionPerformed(evt);
			}
		});

		jTable2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		jTable2.setModel(new javax.swing.table.DefaultTableModel(
				new Object [][] {

				},
				new String [] {
						"User ID", "F Name", "L Name", "BusNo", "Ticked ID", "From", "To", "DepartureTime"
				}
				) {
			Class[] types = new Class [] {
					java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
			};

			public Class getColumnClass(int columnIndex) {
				return types [columnIndex];
			}
		});
		jScrollPane2.setViewportView(jTable2);

		cancelB.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		cancelB.setText("Cancel");
		cancelB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelBActionPerformed(evt);
			}
		});

		exitB.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
		exitB.setText("Exit");
		exitB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitBActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addGap(10, 10, 10)
												.addComponent(insertB, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18)
												.addComponent(editB, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18)
												.addComponent(deleteB, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18)
												.addComponent(cancelB, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18)
												.addComponent(exitB, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGap(37, 37, 37))
												.addGroup(jPanel1Layout.createSequentialGroup()
														.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGap(0, 0, Short.MAX_VALUE))
				);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(insertB)
								.addComponent(editB)
								.addComponent(deleteB)
								.addComponent(cancelB)
								.addComponent(exitB))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
				);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
				);

		pack();
	}// </editor-fold>                        

	private void fromCBActionPerformed(java.awt.event.ActionEvent evt) {                                       
		if (String.valueOf(fromCB.getSelectedItem()).equals(String.valueOf(toCB.getSelectedItem()))) {
			JOptionPane.showMessageDialog(this, "You cann't travel to same city!!");
			fromCB.setSelectedIndex(0);
			toCB.setSelectedIndex(0);
		}
	}                                      

	private void toCBActionPerformed(java.awt.event.ActionEvent evt) {                                     
		if (String.valueOf(fromCB.getSelectedItem()).equals(String.valueOf(toCB.getSelectedItem()))) {
			JOptionPane.showMessageDialog(this, "You cann't travel to same city!!");
			fromCB.setSelectedIndex(0);
			toCB.setSelectedIndex(0);
		}
	}                                    

	private void insertBActionPerformed(java.awt.event.ActionEvent evt) {                                        
		openAll();
		current = 1;
	}                                       

	private void editBActionPerformed(java.awt.event.ActionEvent evt) {                                      
		//openAll();
		current = 2;
		creditCardNumberTF.setEnabled(true);
		editB.setEnabled(false);
		insertB.setEnabled(false);
		deleteB.setEnabled(false);
		cancelB.setEnabled(true);
		fromCB.setEnabled(true);
		toCB.setEnabled(true);
		departureTimeCB.setEnabled(true);
		JOptionPane.showMessageDialog(this, "Please enter your credit card number correctly and edit Travel time.\n"
				+ "note: you can't edit your information here.");
	}                                     

	private void deleteBActionPerformed(java.awt.event.ActionEvent evt) {                                        
		//openAll();
		current = 3;
		creditCardNumberTF.setEnabled(true);
		editB.setEnabled(false);
		insertB.setEnabled(false);
		deleteB.setEnabled(false);
		cancelB.setEnabled(true);
		submitB.setEnabled(true);
		JOptionPane.showMessageDialog(this, "Please enter credit card correctly.");
	}                                       

	private void cancelBActionPerformed(java.awt.event.ActionEvent evt) {                                        
		firstNameTF.setText("");
		lastNameTF.setText("");
		emailTF.setText("");
		creditCardNumberTF.setText("");
		fromCB.setSelectedIndex(0);
		toCB.setSelectedIndex(0);
		departureTimeCB.setSelectedIndex(0);
		submitB.setEnabled(true);
		closeAll();
	}                                       

	private void exitBActionPerformed(java.awt.event.ActionEvent evt) {                                      
		this.setVisible(false);
		this.dispose();
	}                                     

	private void submitBActionPerformed(java.awt.event.ActionEvent evt) {                                        
		try {
			String firstName = firstNameTF.getText();
			String lastName = lastNameTF.getText();
			String email = emailTF.getText();
			String creditCardNumber = creditCardNumberTF.getText();
			String from = String.valueOf(fromCB.getSelectedItem());
			String to = String.valueOf(toCB.getSelectedItem());
			String departureTime = String.valueOf(departureTimeCB.getSelectedItem());
			if (current == 1) {
				if (firstName.equals(""))
					JOptionPane.showMessageDialog(this, "First name field empty!!");
				else if (lastName.equals(""))
					JOptionPane.showMessageDialog(this, "Last name field empty!!");
				else if (email.equals(""))
					JOptionPane.showMessageDialog(this, "Email field empty!!");
				else if (creditCardNumber.equals(""))
					JOptionPane.showMessageDialog(this, "Credit card field empty!!");
				else {
					try {
						rs = st.executeQuery("select id from user where creditCardNumber='" + creditCardNumber + "'");

						if (rs.next())
						{
							int id = rs.getInt("id");

							rs = st.executeQuery("select busNo from bus where fromCity='" + from + "' AND (toCity='" + to + "' AND departureTime='" + departureTime + "')");

							if (rs.next())
							{		
								int busNo = rs.getInt("busNo");
								System.out.println(busNo);
								ps = cn.prepareStatement("INSERT INTO tickets (departureTime,fromCity,"
										+ "toCity,price,busNo)"
										+ " VALUES(?,?,?,?,?)");
								ps.setString(1, departureTime);
								ps.setString(2, String.valueOf(fromCB.getSelectedItem()));
								ps.setString(3, String.valueOf(toCB.getSelectedItem()));
								ps.setDouble(4, 50.0);
								ps.setInt(5, busNo);
								ps.executeUpdate();

								rs = st.executeQuery("select ticketId from tickets where busNo=" + busNo);

								if (rs.next())
								{
									int ticketId = rs.getInt("ticketId");
									ps = cn.prepareStatement("INSERT INTO reservation (id,firstName,"
											+ "lastName,busNo,ticketId,from,to,departureTime,creditCardNumber)"
											+ " VALUES(?,?,?,?,?,?,?,?,?)");
									ps.setInt(1, id);
									ps.setString(2, firstName);
									ps.setString(3, lastName);
									ps.setInt(4, busNo);
									ps.setInt(5, ticketId);
									ps.setString(6, String.valueOf(fromCB.getSelectedItem()));
									ps.setString(7, String.valueOf(toCB.getSelectedItem()));
									ps.setString(8, departureTime);
									ps.setString(9, creditCardNumber);
									ps.executeUpdate(); // LOL
									JOptionPane.showMessageDialog(this, "Reservation completed successfully.");
								}
								else JOptionPane.showMessageDialog(this, "Cannot Submit the Reservation.");
							}
							else JOptionPane.showMessageDialog(this, "Cannot Submit the Reservation.");
						}
						else JOptionPane.showMessageDialog(this, "Cannot Submit the Reservation.");
					} 
					catch (SQLException ex) {
						ex.printStackTrace();
						JOptionPane.showMessageDialog(this, "Something went Wwrong.");
					}
					openAll();
				}
			} else if (current == 2) {
				if (creditCardNumber.equals(""))
					JOptionPane.showMessageDialog(this, "Credit card field empty!!");
				else {
					int result = st.executeUpdate("UPDATE reservation\n"
							+ "SET from='" + from + "', to='" + to + "' , depatureTime='" + departureTime + "' "
							+ "WHERE creditCardNumber=" + creditCardNumber + "'");
					if (result == 1) {
						JOptionPane.showMessageDialog(this, "Reservation updated successfully!");
					}
					openAll();
				}
			} else if (current == 3) {
				if (creditCardNumber.equals(""))
					JOptionPane.showMessageDialog(this, "Credit card field empty!!");
				else {
					int result = st.executeUpdate("DELETE from reservation where creditCardNumber='"
							+ creditCardNumber + "'");
					if (result == 1) {
						JOptionPane.showMessageDialog(this, "Reservation deleted successfully!");
					} else {
						JOptionPane.showMessageDialog(this, "Wrong credit card number!!");
					}
					openAll();
				}
			}
			rs = st.executeQuery("select * from reservation");
			ArrayList<String> list = new ArrayList<>();
			while (rs.next()) {
				list.add("" + rs.getInt("id") + ","
						+ rs.getString("firstName") + ","
						+ rs.getString("lastName") + ","
						+ rs.getInt("busNo") + ","
						+ rs.getInt("ticketId") + ","
						+ rs.getString("from") + ","
						+ rs.getString("to") + ","
						+ rs.getString("departureTime") + ","
						+ rs.getString("creditCardNumber"));
			}
			DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
			for (int i = 0; i < list.size(); i++) {
				model.addRow(list.get(i).split(","));
			}
		} catch (Exception ee) {
			ee.printStackTrace();
		}
	}                                       

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Reservation().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify                     
	private javax.swing.JButton cancelB;
	private javax.swing.JLabel creditCardNumberL;
	private javax.swing.JTextField creditCardNumberTF;
	private javax.swing.JButton deleteB;
	private javax.swing.JComboBox departureTimeCB;
	private javax.swing.JLabel departureTimeL;
	private javax.swing.JButton editB;
	private javax.swing.JLabel emailL;
	private javax.swing.JTextField emailTF;
	private javax.swing.JButton exitB;
	private javax.swing.JLabel firstNameL;
	private javax.swing.JTextField firstNameTF;
	private javax.swing.JComboBox fromCB;
	private javax.swing.JLabel fromL;
	private javax.swing.JButton insertB;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTable jTable2;
	private javax.swing.JLabel lastNameL;
	private javax.swing.JTextField lastNameTF;
	private javax.swing.JButton submitB;
	private javax.swing.JComboBox toCB;
	private javax.swing.JLabel toL;
	// End of variables declaration                   
}
